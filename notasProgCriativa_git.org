Bloco de notas colaborativo: http://collabedit.com/cmnvk

* AULA 01.1 - 22/09/2020

** PROCESSING
- Baixar em https://processing.org/

#+BEGIN_QUOTE
"A flexible software sketchbook and a language for learning how to code within the context of the visual arts"
#+END_QUOTE

- Exemplos vistos em aula (Podem ser acessados no menu /File > Examples/ ou na pasta /processing-3.5.4 > modes > java > examples/):
  - Topics - Drawing - ContinuosLines & Pattern
  - Topics - Simulate - Chain & Flocking
  - Topics - Motion - Brownian & CircleCollision
  - Topics - Image Processing - LinearImage - http://dillonbaker.com/#/spectrum/
  - Demos - Performance - Esfera
  - https://www.instagram.com/colakollektiv/
  - http://www.continuumfashion.com/D.php
  - https://vimeo.com/163153865

- Daniel Shiffman
  - Canal de YouTube: https://www.youtube.com/user/shiffman
  - Livros:
    - https://www.amazon.com/gp/product/B003FL6X4I/ref=dbs_a_def_rwt_bibl_vppi_i2
    - https://www.amazon.com/gp/product/B00NBER0BO/ref=dbs_a_def_rwt_bibl_vppi_i3

* AULA 01.2 - 23/09/2020

- Não ocorreu

* AULA 02.1 - 29/09/2020
- Aspectos práticos:
  - Github - https://github.com/magnoCaliman/ismaiProgCriativa_2020-1
  - Downloads de exemplos via arquivo zip na pasta de cada aula

- Processing:
  - Convenção de nomenclatura de arquivos
  - Estrutura de pasta

- Exemplos:
  - ~bucho.pde~
  - ~catapora.pde~
  - ~cometa.pde~
  - ~infla.pde~

- Documentação:
  - https://processing.org/reference/

* AULA 02.2 - 30/09/2020

- Computador é burro...
- Texto -> Processing -> Imagens
- "Desenhe uma linha"
  - Vocabulário: linguagens de programação só entendem as palavras que fazem parte do vocabulário daquela linguagem!

- Conceitos:
  - *Funções*: /instruções/ para o computador que fazem parte do vocabulário daquela linguagem. "Faça isso..."
  - *Argumentos*: /qualificadores/ de uma função em particular. "...mas faça dessa maneira"
  - *Sintaxe*: /convenção/ de como a escrita de uma linguagem se dá.
    - RTFM! - https://processing.org/reference/

- Vocabulário:
  - ~size()~
  - ~point()~
  - ~line()~
  - ~rect()~
  - ~ellipse()~
  - ~triangle()~

- Especificidades do Processing:
  - Sistema de coordenadas: https://processing.org/tutorials/drawing/
  - Ordem de execução
* AULA 03.1 - 06/10/2020
- Aula prática

* AULA 03.2 - 07/10/2020

- Conceitos:
  - *Modularidade*:
    - Funções às vezes /retornam valores/
    - Funções como argumento de outras funções!
  - *Blocos de código*: se funções são verbos, blocos são parágrafos.

- Vocabulário:
  - ~fill()~ / ~noFill()~
  - ~stroke()~ / ~noStroke~
  - ~background()~
  - ~strokeWeight()~
  - ~println()~
  - ~random()~
  - ~void setup(){}~
  - ~void draw(){}~

- Especificidades do Processing:
  - Cores: https://processing.org/tutorials/color/
  - Estrutura de ~setup()~ + ~draw()~

- Exemplos:
  1. ~background.pde~
  2. ~fill_1arg.pde~
  3. ~fill_3arg.pde~
  4. ~fill_4arg.pde~
  5. ~fill_2arg.pde~
  6. ~stroke.pde~
  7. ~printRandom.pde~
  8. ~randomFillPos.pde~
  9. ~loopDraw.pde~
  10. ~loopBG.pde~
  11. ~linhaRandomBorda.pde~
  12. ~catapora.pde~

- Desafios!
  - ritualPassagem
  - aHa
  - divisaoCanvas
  - sandro
  - tunel
* AULA 04.1 - 13/10/2020
- Dicussão dos desafios da Aula 03.2
- Referências:
  - Norman McLaren
    - https://www.youtube.com/watch?v=E3-vsKwQ0Cg
    - https://www.youtube.com/watch?v=Q0vgZv_JWfM
    - https://www.youtube.com/watch?v=UmSzc8mBJCM
    - https://www.youtube.com/watch?v=7BeCPbNZ74s
  - Vera Molnar
    - https://en.wikipedia.org/wiki/Vera_Moln%C3%A1r
    - https://duckduckgo.com/?q=vera+molnar&iax=images&ia=images

[[/aula04.1/vera_molnar.jpg]]
